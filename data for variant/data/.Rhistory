AMIODARONE=sum(AMIODARONE=="Yes"),
ATORVASTATIN=sum(ATORVASTATIN=="Yes"),
DIGOXIN=sum(DIGOXIN=="Yes"),
DILTIAZEM=sum(DILTIAZEM=="Yes"),
DRONEDARONE=sum(DRONEDARONE=="Yes"),
VERAPAMIL=sum(VERAPAMIL=="Yes"),
VORICONAZOLE=sum(VORICONAZOLE=="Yes"),
CITALOPRAM=sum(CITALOPRAM=="Yes"),
FLUOXETINE=sum(FLUOXETINE=="Yes"),
SERTRALINE=sum(SERTRALINE=="Yes"),
VENLAFAXINE=sum(VENLAFAXINE=="Yes"),
DULOXETINE=sum(DULOXETINE=="Yes")
)
y<-as.matrix(x[,2:ncol(x)])
rownames(y)<-paste0("cluster",x$cluster_id)
colnames(y)<-colnames(x[,2:ncol(x)])
my_palette<-colorRampPalette(c('#0571b0','#f4a582','#B24745FF'))
heat_map<-heatmaply(t(y),
dendrogram = "none",
col = my_palette,
xlab = "Cluster ID", ylab = "Drugs",
grid_color = "white",label_names = c("Drug", "ClusterID:", "Value"),
grid_width = 0.00001,heatmap_layers = theme(axis.line=element_blank())
)
print(heat_map)
heat_data<-y%>%
as_tibble() %>%
rowid_to_column(var="Cluster") %>%
gather(key="Cases", value="Value", -1)
heat_data$Cases<-heat_data$Cases %>% tolower() %>%  tools::toTitleCase()
heat_data$Cluster<-paste0('Cluster ',heat_data$Cluster)
heat_data$Cases<-factor(heat_data$Cases,levels = c("Bleeding","Hospitalization",unique(heat_data$Cases)[3:length(heat_data$Cases)]))
#heatmap(data, Colv = NA, Rowv = NA, scale="column")
gg_heat<-ggplot(heat_data, aes(Cluster, Cases, fill= Value)) +
geom_tile(color = "white") +
scale_fill_gradient(low="#67a9cf", high="#ef8a62") +
ggtitle("Cases by Clusters (Heatmap)")+
xlab("") + ylab("")
print(gg_heat)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
temp<-ggplot(heat_data[-c(1:12),], aes(fill=Cases, y=Value, x=Cluster)) +
geom_bar(position="dodge", stat="identity")
print(temp)
Chadv_fivenum <- Drug_table %>%
group_by(cluster_id) %>%
summarise(five = list(fivenum(Chadv))) %>%
tidyr::unnest(cols = c(five))
p9<-ggplot(Drug_table, aes(x=cluster_id, y=Chadv)) +
geom_boxplot(aes(fill=cluster_id),width = 0.5) +
scale_color_jama()+
scale_fill_jama() +
# geom_text(data = Chadv_fivenum, size = 5,
#           aes(x = factor(cluster_id), y = five, label = five),
#           nudge_x = 0,nudge_y = 1.2)+
ggtitle("Chadv Distribution by Clusters (Boxplot)")+
xlab("Cluster") + ylab("Chadv Score")
print(p9)
bleeding<-Drug_table %>% group_by(cluster_id,bleeding) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p11<-ggplot(bleeding, aes(fill=bleeding, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Bleeding Grouped by Clusters")
color_2<-c("#00A1D5FF","#B24745FF")
p11<-set_palette(p11, palette =color_2)
print(p11)
Hospitalization<-Drug_table %>% group_by(cluster_id,Hospitalization) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p12<-ggplot(Hospitalization, aes(fill=Hospitalization, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Hospitalization Grouped by Clusters")
p12<-set_palette(p12, palette =color_2)
print(p12)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
drug_list<-names(num_drug)
drug_plot=list()
for (i in 1:length(drug_list)){
tmp<-Drug_table %>% group_by(cluster_id,!!! rlang::syms(drug_list[i])) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p<-ggplot(tmp, aes_string(fill=drug_list[i], y="cnt", x="cluster_id")) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle(paste0(drug_list[i]," Grouped by Clusters"))
p<-set_palette(p, palette =color_2)
print(p)
drug_plot[[i]] <- p
}
p_last<-ggarrange(    p8,                                           # First row with scatter plot
ggarrange( p9,p11, ncol = 2, labels = c("B", "C")), # Second row with box and dot plots
ggarrange( p12,gg_heat, ncol = 2, labels = c("D", "E")),
nrow = 3,
labels = "A"                                        # Labels of the scatter plot
)
ggsave(plot = p_last, width = 20, height =20, dpi = 300, filename = paste0(name,".svg"))
print(p_last)
return (list(p8,p9,p12,membership,input_api,drug_plot,heat_map,p_last))
}
out_api<-cluster_func(input_api,6,"API")
print(out_api[[7]])
rm(Enzymes,Enzymes_table,bleeding_events,dabi,riva,Drug_table)
cluster_func1<-function(input_api,k_cluster,name){
Drug_table<-data.frame( Chadv=input_api$chadv,
Hospitalization=input_api$ADMDATE,
bleeding=input_api$bleeding,
ERYTHROMYCIN=ifelse(input_api$ERYTHROMYCIN>0,"Yes","No"),
AMIODARONE=ifelse(input_api$AMIODARONE>0,"Yes","No"),
ATORVASTATIN=ifelse(input_api$ATORVASTATIN>0,"Yes","No"),
DIGOXIN=ifelse(input_api$DIGOXIN>0,"Yes","No"),
DILTIAZEM=ifelse(input_api$DILTIAZEM>0,"Yes","No"),
DRONEDARONE=ifelse(input_api$DRONEDARONE>0,"Yes","No"),
VERAPAMIL=ifelse(input_api$VERAPAMIL>0,"Yes","No"),
VORICONAZOLE=ifelse(input_api$VORICONAZOLE>0,"Yes","No"),
CITALOPRAM=ifelse(input_api$CITALOPRAM>0,"Yes","No"),
FLUOXETINE=ifelse(input_api$FLUOXETINE>0,"Yes","No"),
SERTRALINE=ifelse(input_api$SERTRALINE>0,"Yes","No"),
VENLAFAXINE=ifelse(input_api$VENLAFAXINE>0,"Yes","No"),
DULOXETINE=ifelse(input_api$DULOXETINE>0,"Yes","No")
)
Drug_table$Chadv<-Drug_table$Chadv %>% scale() %>% as.numeric()
Drug_table[,2:ncol(Drug_table)]<-lapply(Drug_table[,2:ncol(Drug_table)],factor)
input<-Drug_table %>% daisy(metric ="gower")
hc3 <- flashClust::hclust(input,method="ward")
#memory.size()
#options(expressions=100000)
Drug_table$Chadv<-input_api$chadv
sub_grp <- cutree(hc3, k = k_cluster)
membership<- table(sub_grp)%>%as.data.frame()
colnames(membership)<-c("Group ID", "Patient number")
Drug_table$cluster_id<-sub_grp
Drug_table$cluster_id<- as.factor(Drug_table$cluster_id)
print(membership)
sum_yes<-function(x) return(sum(x=="Yes"))
paged_table(membership)
x<-Drug_table %>% group_by(cluster_id) %>%
summarise(Bleeding=sum(bleeding=="Yes"),
Hospitalization=sum(Hospitalization=="Yes"),
ERYTHROMYCIN=sum(ERYTHROMYCIN=="Yes"),
AMIODARONE=sum(AMIODARONE=="Yes"),
ATORVASTATIN=sum(ATORVASTATIN=="Yes"),
DIGOXIN=sum(DIGOXIN=="Yes"),
DILTIAZEM=sum(DILTIAZEM=="Yes"),
DRONEDARONE=sum(DRONEDARONE=="Yes"),
VERAPAMIL=sum(VERAPAMIL=="Yes"),
VORICONAZOLE=sum(VORICONAZOLE=="Yes"),
CITALOPRAM=sum(CITALOPRAM=="Yes"),
FLUOXETINE=sum(FLUOXETINE=="Yes"),
SERTRALINE=sum(SERTRALINE=="Yes"),
VENLAFAXINE=sum(VENLAFAXINE=="Yes"),
DULOXETINE=sum(DULOXETINE=="Yes")
)
y<-as.matrix(x[,2:ncol(x)])
rownames(y)<-paste0("cluster",x$cluster_id)
colnames(y)<-colnames(x[,2:ncol(x)])
my_palette<-colorRampPalette(c('#0571b0','#f4a582','#B24745FF'))
heat_map<-heatmaply(t(y),
dendrogram = "none",
col = my_palette,
xlab = "Cluster ID", ylab = "Drugs",
grid_color = "white",label_names = c("Drug", "ClusterID:", "Value"),
grid_width = 0.00001,heatmap_layers = theme(axis.line=element_blank())
)
print(heat_map)
heat_data<-y%>%
as_tibble() %>%
rowid_to_column(var="Cluster") %>%
gather(key="Cases", value="Value", -1)
heat_data$Cases<-heat_data$Cases %>% tolower() %>%  tools::toTitleCase()
heat_data$Cluster<-paste0('Cluster ',heat_data$Cluster)
heat_data$Cases<-factor(heat_data$Cases,levels = c("Bleeding","Hospitalization",unique(heat_data$Cases)[3:length(heat_data$Cases)]))
#heatmap(data, Colv = NA, Rowv = NA, scale="column")
gg_heat<-ggplot(heat_data, aes(Cluster, Cases, fill= Value)) +
geom_tile(color = "white") +
scale_fill_gradient(low="#67a9cf", high="#ef8a62") +
ggtitle("Cases by Clusters (Heatmap)")+
xlab("") + ylab("")
print(gg_heat)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
temp<-ggplot(heat_data[-c(1:12),], aes(fill=Cases, y=Value, x=Cluster)) +
geom_bar(position="dodge", stat="identity")
print(temp)
Chadv_fivenum <- Drug_table %>%
group_by(cluster_id) %>%
summarise(five = list(fivenum(Chadv))) %>%
tidyr::unnest(cols = c(five))
p9<-ggplot(Drug_table, aes(x=cluster_id, y=Chadv)) +
geom_boxplot(aes(fill=cluster_id),width = 0.5) +
scale_color_jama()+
scale_fill_jama() +
# geom_text(data = Chadv_fivenum, size = 5,
#           aes(x = factor(cluster_id), y = five, label = five),
#           nudge_x = 0,nudge_y = 1.2)+
ggtitle("Chadv Distribution by Clusters (Boxplot)")+
xlab("Cluster") + ylab("Chadv Score")
print(p9)
bleeding<-Drug_table %>% group_by(cluster_id,bleeding) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p11<-ggplot(bleeding, aes(fill=bleeding, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Bleeding Grouped by Clusters")
color_2<-c("#00A1D5FF","#B24745FF")
p11<-set_palette(p11, palette =color_2)
print(p11)
Hospitalization<-Drug_table %>% group_by(cluster_id,Hospitalization) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p12<-ggplot(Hospitalization, aes(fill=Hospitalization, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Hospitalization Grouped by Clusters")
p12<-set_palette(p12, palette =color_2)
print(p12)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
drug_list<-names(num_drug)
drug_plot=list()
for (i in 1:length(drug_list)){
tmp<-Drug_table %>% group_by(cluster_id,!!! rlang::syms(drug_list[i])) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p<-ggplot(tmp, aes_string(fill=drug_list[i], y="cnt", x="cluster_id")) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle(paste0(drug_list[i]," Grouped by Clusters"))
p<-set_palette(p, palette =color_2)
print(p)
drug_plot[[i]] <- p
}
p_last<- ggarrange( p9,p11,p12,gg_heat,nrow=2, ncol = 2, labels = c("A", "B","C","D"))
ggsave(plot = p_last, width = 20, height =20, dpi = 300, filename = paste0(name,".svg"))
print(p_last)
return (list(p8,p9,p12,membership,input_api,drug_plot,heat_map,p_last))
}
dabi_out<-cluster_func1(dabi_table,6,"dabi")
cluster_func1<-function(input_api,k_cluster,name){
Drug_table<-data.frame( Chadv=input_api$chadv,
Hospitalization=input_api$ADMDATE,
bleeding=input_api$bleeding,
ERYTHROMYCIN=ifelse(input_api$ERYTHROMYCIN>0,"Yes","No"),
AMIODARONE=ifelse(input_api$AMIODARONE>0,"Yes","No"),
ATORVASTATIN=ifelse(input_api$ATORVASTATIN>0,"Yes","No"),
DIGOXIN=ifelse(input_api$DIGOXIN>0,"Yes","No"),
DILTIAZEM=ifelse(input_api$DILTIAZEM>0,"Yes","No"),
DRONEDARONE=ifelse(input_api$DRONEDARONE>0,"Yes","No"),
VERAPAMIL=ifelse(input_api$VERAPAMIL>0,"Yes","No"),
VORICONAZOLE=ifelse(input_api$VORICONAZOLE>0,"Yes","No"),
CITALOPRAM=ifelse(input_api$CITALOPRAM>0,"Yes","No"),
FLUOXETINE=ifelse(input_api$FLUOXETINE>0,"Yes","No"),
SERTRALINE=ifelse(input_api$SERTRALINE>0,"Yes","No"),
VENLAFAXINE=ifelse(input_api$VENLAFAXINE>0,"Yes","No"),
DULOXETINE=ifelse(input_api$DULOXETINE>0,"Yes","No")
)
Drug_table$Chadv<-Drug_table$Chadv %>% scale() %>% as.numeric()
Drug_table[,2:ncol(Drug_table)]<-lapply(Drug_table[,2:ncol(Drug_table)],factor)
input<-Drug_table %>% daisy(metric ="gower")
hc3 <- flashClust::hclust(input,method="ward")
#memory.size()
#options(expressions=100000)
Drug_table$Chadv<-input_api$chadv
sub_grp <- cutree(hc3, k = k_cluster)
membership<- table(sub_grp)%>%as.data.frame()
colnames(membership)<-c("Group ID", "Patient number")
Drug_table$cluster_id<-sub_grp
Drug_table$cluster_id<- as.factor(Drug_table$cluster_id)
print(membership)
sum_yes<-function(x) return(sum(x=="Yes"))
paged_table(membership)
x<-Drug_table %>% group_by(cluster_id) %>%
summarise(Bleeding=sum(bleeding=="Yes"),
Hospitalization=sum(Hospitalization=="Yes"),
ERYTHROMYCIN=sum(ERYTHROMYCIN=="Yes"),
AMIODARONE=sum(AMIODARONE=="Yes"),
ATORVASTATIN=sum(ATORVASTATIN=="Yes"),
DIGOXIN=sum(DIGOXIN=="Yes"),
DILTIAZEM=sum(DILTIAZEM=="Yes"),
DRONEDARONE=sum(DRONEDARONE=="Yes"),
VERAPAMIL=sum(VERAPAMIL=="Yes"),
VORICONAZOLE=sum(VORICONAZOLE=="Yes"),
CITALOPRAM=sum(CITALOPRAM=="Yes"),
FLUOXETINE=sum(FLUOXETINE=="Yes"),
SERTRALINE=sum(SERTRALINE=="Yes"),
VENLAFAXINE=sum(VENLAFAXINE=="Yes"),
DULOXETINE=sum(DULOXETINE=="Yes")
)
y<-as.matrix(x[,2:ncol(x)])
rownames(y)<-paste0("cluster",x$cluster_id)
colnames(y)<-colnames(x[,2:ncol(x)])
my_palette<-colorRampPalette(c('#0571b0','#f4a582','#B24745FF'))
heat_map<-heatmaply(t(y),
dendrogram = "none",
col = my_palette,
xlab = "Cluster ID", ylab = "Drugs",
grid_color = "white",label_names = c("Drug", "ClusterID:", "Value"),
grid_width = 0.00001,heatmap_layers = theme(axis.line=element_blank())
)
print(heat_map)
heat_data<-y%>%
as_tibble() %>%
rowid_to_column(var="Cluster") %>%
gather(key="Cases", value="Value", -1)
heat_data$Cases<-heat_data$Cases %>% tolower() %>%  tools::toTitleCase()
heat_data$Cluster<-paste0('Cluster ',heat_data$Cluster)
heat_data$Cases<-factor(heat_data$Cases,levels = c("Bleeding","Hospitalization",unique(heat_data$Cases)[3:length(heat_data$Cases)]))
#heatmap(data, Colv = NA, Rowv = NA, scale="column")
gg_heat<-ggplot(heat_data, aes(Cluster, Cases, fill= Value)) +
geom_tile(color = "white") +
scale_fill_gradient(low="#67a9cf", high="#ef8a62") +
ggtitle("Cases by Clusters (Heatmap)")+
xlab("") + ylab("")
print(gg_heat)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
temp<-ggplot(heat_data[-c(1:12),], aes(fill=Cases, y=Value, x=Cluster)) +
geom_bar(position="dodge", stat="identity")
print(temp)
Chadv_fivenum <- Drug_table %>%
group_by(cluster_id) %>%
summarise(five = list(fivenum(Chadv))) %>%
tidyr::unnest(cols = c(five))
p9<-ggplot(Drug_table, aes(x=cluster_id, y=Chadv)) +
geom_boxplot(aes(fill=cluster_id),width = 0.5) +
scale_color_jama()+
scale_fill_jama() +
# geom_text(data = Chadv_fivenum, size = 5,
#           aes(x = factor(cluster_id), y = five, label = five),
#           nudge_x = 0,nudge_y = 1.2)+
ggtitle("Chadv Distribution by Clusters (Boxplot)")+
xlab("Cluster") + ylab("Chadv Score")
print(p9)
bleeding<-Drug_table %>% group_by(cluster_id,bleeding) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p11<-ggplot(bleeding, aes(fill=bleeding, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Bleeding Grouped by Clusters")
color_2<-c("#00A1D5FF","#B24745FF")
p11<-set_palette(p11, palette =color_2)
print(p11)
Hospitalization<-Drug_table %>% group_by(cluster_id,Hospitalization) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p12<-ggplot(Hospitalization, aes(fill=Hospitalization, y=cnt, x=cluster_id)) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle("Hospitalization Grouped by Clusters")
p12<-set_palette(p12, palette =color_2)
print(p12)
num_drug<-which(sapply(Drug_table[5:ncol(Drug_table)] ,sum_yes)>10,)
drug_list<-names(num_drug)
drug_plot=list()
for (i in 1:length(drug_list)){
tmp<-Drug_table %>% group_by(cluster_id,!!! rlang::syms(drug_list[i])) %>% summarise(cnt=n()) %>%
group_by(cluster_id)%>%mutate(count= sum(cnt))%>%
mutate(per=paste0(round(100*cnt/count,1),'%'))%>%
mutate(per_value=round(cnt/count,3))
p<-ggplot(tmp, aes_string(fill=drug_list[i], y="cnt", x="cluster_id")) +
geom_bar(position = "fill",stat="identity",width = 0.7)+
scale_y_continuous(labels = scales::percent) +
scale_color_jama()+
scale_fill_jama()+
geom_text(aes( y=per_value,label = per), size = 3, position = position_stack(vjust = 0.5))+
xlab("Cluster") + ylab("Cases Percentage")+
ggtitle(paste0(drug_list[i]," Grouped by Clusters"))
p<-set_palette(p, palette =color_2)
print(p)
drug_plot[[i]] <- p
}
p_last<- ggarrange( p9,p11,p12,gg_heat,nrow=2, ncol = 2, labels = c("A", "B","C","D"))
ggsave(plot = p_last, width = 20, height =20, dpi = 300, filename = paste0(name,".svg"))
print(p_last)
return (list(p9,p12,membership,input_api,drug_plot,heat_map,p_last))
}
dabi_out<-cluster_func1(dabi_table,6,"dabi")
riva_out<-cluster_func(riva_table,6,"riva")
print(riva_out[[4]])
print(riva_out[[7]])
setwd("C:/Users/liume/OneDrive - The Pennsylvania State University/XGB/Lineage2022/data")
library(foreach)
library(outbreakinfo)
library(data.table)
library(dplyr)
library(tibble)
library(countrycode)
library(UScensus2010)
library(stringr )
library(raster)
library(reshape2)
library(reshape)
library(zoo)
library(plotly)
library(data.table)
library(RCurl)
library(RSelenium)
library(rvest)
library(httr)
library(keyring)
library(jsonlite)
###############################################################################################
##auto login
OUTBREAK_INFO_AUTH = "https://api.outbreak.info/genomics/get-auth-token"
response <- POST(OUTBREAK_INFO_AUTH, body = "{}", encode = "raw")
if (status_code(response) == 200) {
response_content <- content(response)
auth_token <- response_content$authn_token
Sys.setenv(OUTBREAK_INFO_TOKEN = auth_token)
cat(paste("Please open this url in a browser and authenticate with your GISAID credentials.",
response_content$authn_url, sep = "\n\n"))
browseURL(response_content$authn_url)
}
#response_content$authn_url
driver <- rsDriver(browser=c("chrome"),
chromever = "latest_compatible")
remote_driver <- driver[["client"]]
remote_driver$open()
remote_driver$navigate(response_content$authn_url)
webElem1 <- remote_driver$findElement(using = "name", "login")
webElem1$sendKeysToElement(list("liumeng595",key="enter"))
webElem2 <- remote_driver$findElement(using = "name", "password")
webElem2$sendKeysToElement(list("Z1vd6(nk",key="enter"))
webElem3 <- remote_driver$findElement(using = "xpath",value="//input[@value='Authenticate']")
webElem3$clickElement()
###############################################################################################
#Get the country name
country<-fread("country.csv",header = T)
country$ISO3<-countrycode(country$x, origin = 'country.name', destination = 'iso3c')
country$ISO2<-countrycode(country$x, origin = 'country.name', destination = 'iso2c')
country<-fread("country.csv",header = T)
country$ISO3<-countrycode(country$x, origin = 'country.name', destination = 'iso3c')
country$ISO2<-countrycode(country$x, origin = 'country.name', destination = 'iso2c')
#get the variant
omicron_qr <-  lookupSublineages("omicron", returnQueryString = TRUE)
alpha_qr <-  lookupSublineages("alpha", returnQueryString = TRUE)
beta_qr <-  lookupSublineages("beta", returnQueryString = TRUE)
delta_qr <-  lookupSublineages("delta", returnQueryString = TRUE)
gamma_qr<-  lookupSublineages("gamma", returnQueryString = TRUE)
omicron_qr <-  lookupSublineages("omicron", returnQueryString = TRUE)
alpha_qr <-  lookupSublineages("alpha", returnQueryString = TRUE)
beta_qr <-  lookupSublineages("beta", returnQueryString = TRUE)
delta_qr <-  lookupSublineages("delta", returnQueryString = TRUE)
gamma_qr<-  lookupSublineages("gamma", returnQueryString = TRUE)
omicron_qr <-  lookupSublineages("omicron", returnQueryString = TRUE)
#BA.2_qr <-  'BA.2 OR BA.2.1 OR BA.2.2 OR BA.2.3 OR BA.2.3.1 OR BA.2.3.2 OR BA.2.4 OR BA.2.5 OR BA.2.6 OR BA.2.7 OR BA.2.8 OR BA.2.9 OR BA.2.9.1 OR BA.2.10 OR BA.2.10.1 OR BA.2.11 OR BA.2.12 OR BA.2.12.1 OR BA.2.13'
VOC<-c(alpha_qr,beta_qr,gamma_qr,delta_qr,omicron_qr)
VOC_dic<-data.frame(Name=c("Alpha","Beta","Gamma","Delta","Omicron"),
QR=c(alpha_qr,beta_qr,gamma_qr,delta_qr,omicron_qr))
#US state
states.names<- getData(country="USA", level=1)
US_state<-data.frame(Name=states.names$NAME_1,Abb=state.abb[match(states.names$NAME_1,state.name)] )
US_state$Abb[US_state$Name=="District of Columbia"]<-"DC"
US_state$query_name<-paste0("USA_US-",US_state$Abb)
#Canada provinces
Canada_provinces <- getData(country="Canada", level=1)
Canada_provinces<-Canada_provinces$NAME_1
Canada_state<-data.frame(Name=Canada_provinces,
Abb=c("AB","BC","MB","NB","NL","NT","NS","NU",
"ON","PE","QC","SK","YT"))
Canada_state$query_name<-paste0("CAN_CA-",Canada_state$Abb)
#India provinces
India_provinces<-getData(country="India", level=1)
India_provinces<-India_provinces$NAME_1
India_provinces[25]<-"Delhi"
India_provinces<-sort(India_provinces)
India_state<-data.frame(Name=India_provinces,
Abb=c("AN","AP","AR","AS","BR","CH","CT","DN",
"DD","DL","GA","GJ","HR","HP","JK","JH","KA",
"KL","LD","MP","MH","MN","ML","MZ","NL",
"OR","PY","PB","RJ","SK","TN","TG","TR","UP","UT","WB"))
India_state$query_name<-paste0("IND_IN-",India_state$Abb)
