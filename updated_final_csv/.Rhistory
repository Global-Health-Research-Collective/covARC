mutate(NewCases = Confirmed - lag(Confirmed, default = first(Confirmed)))
jhu_dataset <- jhu_dataset %>%
dplyr::mutate(fourteen_day_agg = rollapply(NewCases, 14, sum, align="right", fill= NA))
}
}
#===============================================================================================
if(country_name=="United States"){
if(!is.na(county)){
jhu_dataset<-jhu_dataset %>%
group_by(city) %>%
mutate(NewCases_u = Confirmed_u - lag(Confirmed_u, default = first(Confirmed_u)))
jhu_dataset <- jhu_dataset %>%
dplyr::group_by(city) %>%
dplyr::mutate(fourteen_day_agg_u = rollapply(NewCases_u, 14, sum, align="right", fill= NA))
}else{
jhu_dataset<-jhu_dataset %>%
mutate(NewCases_u = Confirmed_u - lag(Confirmed, default = first(Confirmed)))
jhu_dataset <- jhu_dataset %>%
dplyr::mutate(fourteen_day_agg_u = rollapply(NewCases_u, 14, sum, align="right", fill= NA))
}
}else{
if(!is.na(region)){
jhu_dataset<-jhu_dataset %>%
group_by(region) %>%
mutate(NewCases_u = Confirmed_u - lag(Confirmed_u, default = first(Confirmed_u)))
jhu_dataset <- jhu_dataset %>%
dplyr::group_by(region) %>%
dplyr::mutate(fourteen_day_agg_u = rollapply(NewCases_u, 14, sum, align="right", fill= NA))
}else{
jhu_dataset<-jhu_dataset %>%
mutate(NewCases_u = Confirmed_u - lag(Confirmed, default = first(Confirmed)))
jhu_dataset <- jhu_dataset %>%
dplyr::mutate(fourteen_day_agg_u = rollapply(NewCases_u, 14, sum, align="right", fill= NA))
}
}
#======================================================================================================
#======================================================================================================
jhu_dataset_agg <- jhu_dataset[!is.na(jhu_dataset$fourteen_day_agg),]
jhu_dataset_agg <- jhu_dataset_agg %>% mutate_if(is.character,as.factor)
if(!is.na(county)){
jhu_dataset_agg$city <- as.factor(jhu_dataset_agg$city)
}
#======================================================================================================
jhu_dataset_agg_u <- jhu_dataset[!is.na(jhu_dataset$fourteen_day_agg_u),]
jhu_dataset_agg_u <- jhu_dataset_agg_u %>% mutate_if(is.character,as.factor)
if(!is.na(county)){
jhu_dataset_agg_u$city <- as.factor(jhu_dataset_agg_u$city)
}
jhu_dataset_date <- jhu_dataset_agg
for (date_1 in jhu_dataset_date$date){
date = date_1
#======================================================================================================
#======================================================================================================
if(country_name=="United States"){
if(!is.na(county)){
fac_aggregate_cases <- jhu_dataset_agg$fourteen_day_agg[which(jhu_dataset_agg$city==county & as.Date(jhu_dataset_agg$date)==as.Date(date))]
}else{
fac_aggregate_cases <- jhu_dataset_agg$fourteen_day_agg[as.Date(jhu_dataset_agg$date)==as.Date(date)]
}
}else{
if(!is.na(region)){
fac_aggregate_cases <- jhu_dataset_agg$fourteen_day_agg[which(jhu_dataset_agg$region==region & as.Date(jhu_dataset_agg$date)==as.Date(date))]
}else{
fac_aggregate_cases <- jhu_dataset_agg$fourteen_day_agg[as.Date(jhu_dataset_agg$date)==as.Date(date)]
}
}
#======================================================================================================
if(country_name=="United States"){
if(!is.na(region)){
fac_aggregate_cases_u <- jhu_dataset_agg$fourteen_day_agg_u[which(jhu_dataset_agg_u$city==county & as.Date(jhu_dataset_agg_u$date)==as.Date(date))]
}else{
fac_aggregate_cases_u <- jhu_dataset_agg$fourteen_day_agg_u[as.Date(jhu_dataset_agg_u$date)==as.Date(date)]
}
}else{
if(!is.na(region)){
fac_aggregate_cases_u <- jhu_dataset_agg$fourteen_day_agg_u[which(jhu_dataset_agg_u$region==region & as.Date(jhu_dataset_agg_u$date)==as.Date(date))]
}else{
fac_aggregate_cases_u <- jhu_dataset_agg$fourteen_day_agg_u[as.Date(jhu_dataset_agg_u$date)==as.Date(date)]
}
}
#======================================================================================================
#======================================================================================================
fac_aggregate_cases_per_pop <- fac_aggregate_cases/pop_var
fac_aggregate_cases_per_pop_u <- fac_aggregate_cases_u/pop_var
#======================================================================================================
#======================================================================================================
mask <- read.csv("C:/Users/shrey/Downloads/Synapsy/covARC/data/mask.csv") #Ref: https://www.epa.gov/sciencematters/epa-researchers-test-effectiveness-face-masks-disinfection-methods-against-covid-19
#mask <- read.csv(curl("https://raw.githubusercontent.com/Volunteer-Collab/risk_calculator/main/Risk_calculator/risk_calculator_simple/custom_dataset/mask.csv?token=ACZDUYEEPMIQ2GRZNQXAPYLBBP6K6"))
mask<- mask %>% mutate_if(is.character,as.factor)
mask$risk <- 1-mask$FFE
summary(mask)
vaccine_eff <- read.csv("C:/Users/shrey/Downloads/Synapsy/covARC/data/vaccine_eff.csv", sep = ",") #Ref: https://yourlocalepidemiologist.substack.com/p/vaccine-table-update-lots-on-delta
#vaccine_eff <- read.csv(curl("https://raw.githubusercontent.com/Volunteer-Collab/risk_calculator/main/Risk_calculator/risk_calculator_simple/custom_dataset/vaccine_eff.csv?token=ACZDUYEVXTJVJEBGNSWYYV3BBP6RI"))
vaccine_eff[is.na(vaccine_eff)] <- 0
vaccine_eff$vaccine <- as.factor(vaccine_eff$vaccine)
#================data pulling script========================
variants_dataset <- read_csv(paste0(paste0("C:/Users/shrey/Downloads/Synapsy/covARC/data/Country/processed/",country_name),".csv"),show_col_types = FALSE)
variants_dataset$Date <- as.Date(variants_dataset$Date)
#variants_dataset <- variants_dataset[-c(2,3)]
variants_date = variants_dataset[variants_dataset$Date==as.Date(date)-31,]
variants_date[is.na(variants_date)] <- 0
if (length(variants_date$Date) == 0) {
#variants_date <- data.frame(matrix(ncol = 8, nrow = 1))
#x <- colnames(variants_dataset)
#colnames(variants_date) <- x
#variants_date_row = c(date, 0, country_name, 0, 0, 0, 0, 0)
#variants_date = rbind(variants_date, variants_date_row)
#variants_date = na.omit(variants_date)
#variants_date$Alpha = as.numeric(variants_date$Alpha)
#variants_date$Beta = as.numeric(variants_date$Beta)
#variants_date$Gamma = as.numeric(variants_date$Gamma)
#variants_date$Delta = as.numeric(variants_date$Delta)
#variants_date$Omicron = as.numeric(variants_date$Omicron)
variants_date = variants_dataset[variants_dataset$Date==as.Date(date)-32,]
}
variants_date$Alpha = NaN
variants_date$Beta = NaN
#variants_date$Gamma = NaN
variants_date$Delta = NaN
variants_date$Omicron = NaN
#variants_date <- variants_date[-c(2)]
#===============Alpha Variant===========================================
if (!is.na(variants_date$Alpha)) {
factor_variant_alpha = variants_date$Alpha
} else {factor_variant_alpha = 0}
#===============Beta Variant============================================
#variants_date$prevalence_gaussian5_b.1.351 = variants_date$prevalence_gaussian5_b.1.351+variants_date$prevalence_gaussian5_b.1.351.2+variants_date$prevalence_gaussian5_b.1.351.3
if(!is.na(variants_date$Beta)){
factor_variant_beta = variants_date$Beta
} else {factor_variant_beta = 0}
#===============Gamma Variant===========================================
#variants_date$prevalence_gaussian5_p.1 = variants_date$prevalence_gaussian5_p.1+variants_date$prevalence_gaussian5_p.1.1+variants_date$prevalence_gaussian5_p.1.2+variants_date$prevalence_gaussian5_p.1.3+variants_date$prevalence_gaussian5_p.1.4+variants_date$prevalence_gaussian5_p.1.6+variants_date$prevalence_gaussian5_p.1.7+variants_date$prevalence_gaussian5_p.1.8
if (!is.na(variants_date$Gamma)){
factor_variant_gamma = variants_date$Gamma
} else {factor_variant_gamma = 0}
#===============Delta Variant===========================================
#variants_date$prevalence_gaussian5_b.1.617.2 = variants_date$prevalence_gaussian5_b.1.617.2+variants_date$prevalence_gaussian5_ay.2+variants_date$prevalence_gaussian5_ay.3+variants_date$prevalence_gaussian5_ay.3.1+variants_date$prevalence_gaussian5_ay.4+variants_date$prevalence_gaussian5_ay.5+variants_date$prevalence_gaussian5_ay.6+variants_date$prevalence_gaussian5_ay.7+variants_date$prevalence_gaussian5_ay.9+variants_date$prevalence_gaussian5_ay.10+variants_date$prevalence_gaussian5_ay.11+variants_date$prevalence_gaussian5_ay.12
if (!is.na(variants_date$Delta)) {
factor_variant_delta = variants_date$Delta
} else {factor_variant_delta = 0}
#===============omicron Variant===========================================
if (!is.na(variants_date$Omicron)) {
factor_variant_omicron = variants_date$Omicron
} else {factor_variant_omicron = 0}
#====================Mask Type Processing==================================
fac_mask = mask$risk[which(mask$mask_type==mask_type)]
if (!is.na(1-(factor_variant_alpha+factor_variant_beta+factor_variant_gamma+factor_variant_delta))) {
factor_variant_normal = 1-(factor_variant_alpha+factor_variant_beta+factor_variant_gamma+factor_variant_delta)
} else {factor_variant_normal = 0}
#fac_variants = vaccine risk factor reduction
#Can add more variants data here
fac_vaccine_normal = 1-(vaccine_eff$normal[which(vaccine_eff$vaccine == type_vaccine_dose)]) #1- 80-95% efficacy
fac_vaccine_alpha = 1-(vaccine_eff$alpha[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_beta = 1-(vaccine_eff$beta[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_gamma = 1-(vaccine_eff$gamma[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_delta = 1-(vaccine_eff$delta[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_omicron = 1-(vaccine_eff$omicron[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_normal_u = 1-(vaccine_eff$normal_u[which(vaccine_eff$vaccine == type_vaccine_dose)]) #1- 80-95% efficacy
fac_vaccine_alpha_u = 1-(vaccine_eff$alpha_u[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_beta_u = 1-(vaccine_eff$beta_u[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_gamma_u = 1-(vaccine_eff$gamma_u[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_delta_u = 1-(vaccine_eff$delta_u[which(vaccine_eff$vaccine == type_vaccine_dose)])
fac_vaccine_omicron_u = 1-(vaccine_eff$omicron_u[which(vaccine_eff$vaccine == type_vaccine_dose)])
if(past_covid_infection=="Yes"){
fac_vaccine_alpha=0.098*fac_vaccine_alpha
fac_vaccine_beta=0.143*fac_vaccine_beta
fac_vaccine_delta=0.08*fac_vaccine_delta
fac_vaccine_omicron=0.44*fac_vaccine_omicron
fac_vaccine_alpha_u=0.098*fac_vaccine_alpha_u
fac_vaccine_beta_u=0.143*fac_vaccine_beta_u
fac_vaccine_delta_u=0.08*fac_vaccine_delta_u
fac_vaccine_omicron_u=0.44*fac_vaccine_omicron_u
}
#======================================================================================================
#======================================================================================================
fac_variants_u = factor_variant_normal*fac_vaccine_normal + factor_variant_alpha*fac_vaccine_alpha + factor_variant_beta*fac_vaccine_beta+ factor_variant_gamma*fac_vaccine_gamma+factor_variant_delta*fac_vaccine_delta+factor_variant_omicron*fac_vaccine_omicron
#======================================================================================================
fac_variants = factor_variant_normal*fac_vaccine_normal_u + factor_variant_alpha*fac_vaccine_alpha_u + factor_variant_beta*fac_vaccine_beta_u+ factor_variant_gamma*fac_vaccine_gamma_u+ factor_variant_delta*fac_vaccine_delta_u+factor_variant_omicron*fac_vaccine_omicron_u
#======================================================================================================
#======================================================================================================
if(fac_variants!=0){
risk_factor_outdoor = 0.05*people_passed_outdoor*(fac_aggregate_cases_per_pop*fac_mask*fac_variants)
risk_factor_indoor = people_passed_indoor*(fac_aggregate_cases_per_pop*fac_mask*fac_variants)
}else{
fac_aggregate_cases_per_pop <- fac_aggregate_cases_per_pop*fac_vaccine_normal
risk_factor_outdoor = 0.05*people_passed_outdoor*(fac_aggregate_cases_per_pop*fac_mask)
risk_factor_indoor = people_passed_indoor*(fac_aggregate_cases_per_pop*fac_mask)
}
#======================================================================================================
if(fac_variants_u!=0){
risk_factor_outdoor_u = 0.05*people_passed_outdoor*(fac_aggregate_cases_per_pop_u*fac_mask*fac_variants_u)
risk_factor_indoor_u = people_passed_indoor*(fac_aggregate_cases_per_pop_u*fac_mask*fac_variants_u)
}else{
fac_aggregate_cases_per_pop <- fac_aggregate_cases_per_pop_u*fac_vaccine_normal_u
risk_factor_outdoor_u = 0.05*people_passed_outdoor*(fac_aggregate_cases_per_pop_u*fac_mask)
risk_factor_indoor_u = people_passed_indoor*(fac_aggregate_cases_per_pop_u*fac_mask)
}
#======================================================================================================
#======================================================================================================
cum_risk_factor <- risk_factor_outdoor+risk_factor_indoor
cum_risk_factor_u <- risk_factor_outdoor_u+risk_factor_indoor_u
if(age_group>=0 & age_group<=17){
hosp_risk_lower = cum_risk_factor_u*0.008
death_risk_lower = cum_risk_factor_u*0.000015
hosp_risk_upper = cum_risk_factor*0.008
death_risk_upper = cum_risk_factor*0.000015
}
if(age_group>=18 & age_group<=49){
hosp_risk_lower = cum_risk_factor_u*0.025
death_risk_lower = cum_risk_factor_u*0.0007
hosp_risk_upper = cum_risk_factor*0.025
death_risk_upper = cum_risk_factor*0.0007
}
if(age_group>=50 & age_group<=64){
hosp_risk_lower = cum_risk_factor_u*0.079
death_risk_lower = cum_risk_factor_u*0.007
hosp_risk_upper = cum_risk_factor*0.079
death_risk_upper = cum_risk_factor*0.007
}
if(age_group>=65){
hosp_risk_lower = cum_risk_factor_u*0.23
death_risk_lower = cum_risk_factor_u*0.06
hosp_risk_upper = cum_risk_factor*0.23
death_risk_upper = cum_risk_factor*0.06
}
if (chronic_illness == "Yes"){
hosp_risk_lower = hosp_risk_lower*2.5
hosp_risk_upper = hosp_risk_upper*2.5
death_risk_lower = death_risk_lower*1.2
death_risk_upper = death_risk_upper*6.9
}
if(chronic_illness == "No"){
hosp_risk_lower = hosp_risk_lower
hosp_risk_upper = hosp_risk_upper
death_risk_lower = death_risk_lower
death_risk_upper = death_risk_upper
}
if(gender == "Male"){
death_risk_lower = death_risk_lower*1.5
death_risk_upper = death_risk_upper*2.3
}
if(!is.na(variants_date$Alpha)){
hosp_risk_lower=1.5*hosp_risk_lower
hosp_risk_upper=1.6*hosp_risk_upper
death_risk_lower=1.4*death_risk_lower
death_risk_upper=1.7*death_risk_upper
}
if(!is.na(variants_date$Gamma)){
#  hosp_risk_lower=1.5*hosp_risk_lower
#  hosp_risk_upper=1.6*hosp_risk_upper
death_risk_lower=1.2*death_risk_lower
death_risk_upper=1.9*death_risk_upper
}
if(!is.na(variants_date$Delta)){
hosp_risk_lower=1.9*hosp_risk_lower
hosp_risk_upper=3*hosp_risk_upper
death_risk_lower=1.5*death_risk_lower
death_risk_upper=3.3*death_risk_upper
}
hosp_risk_lower<-ifelse (type_vaccine_dose=="Moderna (Dose 1)" | type_vaccine_dose=="Pfizer (Dose 1)" | type_vaccine_dose=="Astrazeneca (Dose 1)", 0.1*hosp_risk_lower, 0.7*hosp_risk_lower)
hosp_risk_upper<-ifelse (type_vaccine_dose=="Moderna (Dose 1)" | type_vaccine_dose=="Pfizer (Dose 1)" | type_vaccine_dose=="Astrazeneca (Dose 1)", 0.1*hosp_risk_upper, 0.7*hosp_risk_upper)
hosp_risk_lower<-ifelse (type_vaccine_dose=="Moderna (Dose 1)" | type_vaccine_dose=="Pfizer (Dose 1)" | type_vaccine_dose=="Astrazeneca (Dose 1)", 0.1*death_risk_lower, 0.7*death_risk_lower)
hosp_risk_lower<-ifelse (type_vaccine_dose=="Moderna (Dose 1)" | type_vaccine_dose=="Pfizer (Dose 1)" | type_vaccine_dose=="Astrazeneca (Dose 1)", 0.1*death_risk_upper, 0.7*death_risk_upper)
if(!is.na(variants_date$Omicron)){
hosp_risk_lower=0.313636363*hosp_risk_lower
hosp_risk_upper=0.327272727*hosp_risk_upper
death_risk_lower=0.011*death_risk_lower
death_risk_upper=0.011*death_risk_upper
}
risk_factor_indoor = risk_factor_indoor*100
risk_factor_outdoor = risk_factor_outdoor*100
cum_risk_factor = cum_risk_factor*100
cum_risk_factor_u = cum_risk_factor_u*100
hosp_risk_lower = hosp_risk_lower*100
hosp_risk_upper = hosp_risk_upper*100
death_risk_lower = death_risk_lower*100
death_risk_upper = death_risk_upper*100
if (risk_factor_indoor>99){
risk_factor_indoor = 99
}
if (risk_factor_indoor_u>99){
risk_factor_indoor_u = 99
}
if (risk_factor_outdoor>99){
risk_factor_outdoor = 99
}
if (risk_factor_outdoor_u>99){
risk_factor_outdoor_u = 99
}
if (cum_risk_factor>99){
cum_risk_factor = 99
}
if (cum_risk_factor_u>99){
cum_risk_factor_u = 99
}
if (hosp_risk_lower>99){
hosp_risk_lower = 99
}
if (hosp_risk_upper>99){
hosp_risk_upper = 99
}
if (death_risk_lower>99){
death_risk_lower = 99
}
if (death_risk_upper>99){
death_risk_upper = 99
}
risk_factor_outdoor #Lower value of indoor risk value
risk_factor_indoor #Lower value of outdoor risk value
risk_factor_indoor_u #Upper value of indoor risk value
risk_factor_outdoor_u #Upper value of outdoor risk value
cum_risk_factor_u #Upper value of risk factor
cum_risk_factor #Lower value of risk factor
hosp_risk_lower
hosp_risk_upper
death_risk_lower
death_risk_upper
if (cum_risk_factor<=0.1) {
f_risk = "Low Risk"
} else if(cum_risk_factor>0.1 & cum_risk_factor<=1)
{f_risk = "Medium Risk"
} else if(cum_risk_factor>1){
f_risk = "High Risk"
} else if(cum_risk_factor==0){
f_risk = "Error!"
}
var <- c(date, fac_aggregate_cases, fac_aggregate_cases_per_pop, cum_risk_factor, cum_risk_factor_u, hosp_risk_lower, hosp_risk_upper, death_risk_lower, death_risk_upper, f_risk)
graphical <- rbind(var,graphical)
print(variants_date) #Stores value for which level of risk it is
}
graphical <- graphical[!duplicated(graphical), ]
write.csv(graphical,'franklin_usa_30_no_safety_gamma_flt.csv')
rm(list=ls())
library(dplyr)
#library(tidyverse)
library(zoo)
library(curl)
library(ggplot2)
library(foreach)
library(doParallel)
library(parallel)
library(data.table)
library(rlang)
library(imputeTS)
library(ggsci)
library(ggpubr)
library(cowplot)
library(scales)
setwd("C:/Users/shrey/Downloads/Synapsy/covARC/updated_final_csv")
files<-list.files(pattern = ".csv")
df_names<-  c("Index",'date','fac_aggregate_cases','fac_aggregate_cases_per_pop','cum_risk_factor','cum_risk_factor_u','hosp_risk_lower','hosp_risk_upper','death_risk_lower','death_risk_upper','f_risk')
error_date<-fread("franklin_usa_30_no_safety_alpha_flt.csv",header=F) %>%
set_names(df_names) %>% mutate(date=as.numeric(date) %>% as.Date()) %>% na.omit() %>% filter(fac_aggregate_cases<0) %>% select(date)
data_preprocessing_no_col<-function(path){
processed<-path %>%fread( header=F) %>%
set_names(df_names) %>% mutate(date=as.numeric(date) %>% as.Date()) %>% na.omit()%>%
mutate_at(vars(3:10), as.numeric) %>%
mutate_at(vars(fac_aggregate_cases:death_risk_upper), ~ifelse(date %in% error_date$date, NA, .)) %>%
mutate_all(~na_interpolation(., option = "spline")) %>%
mutate(date = as.Date(date)) %>% arrange(date)
return (processed)
}
data_preprocessing<-function(path){
processed<-path %>%fread( header=T) %>%
mutate(date=as.numeric(date) %>% as.Date()) %>% na.omit()%>%
mutate_at(vars(3:10), as.numeric) %>%
mutate_at(vars(fac_aggregate_cases:death_risk_upper), ~ifelse(date %in% error_date$date, NA, .)) %>%
mutate_all(~na_interpolation(., option = "spline")) %>%
mutate(date = as.Date(date)) %>% arrange(date)
return (processed)
}
custom_comma <- function(x) {
format_decimal <- function(num) {
num <- round(num, 10) # Round the number to 10 decimal places
formatted_num <- format(num, big.mark = ",", nsmall = 10, scientific = FALSE, trim = TRUE)
return(gsub("\\.?0+$", "", formatted_num))
}
sapply(x, format_decimal)
}
plot_fun<-function(df,title_name,font_size,min_y,max_y){
# log_interval <- 2
# y_breaks <- 10^(seq(floor(log10(min_y)), ceiling(log10(max_y)), by = log_interval))
#
max_y<-100
min_y<-0.8*min_y
p <- ggplot(df) +
geom_line(aes(y = fac_aggregate_cases/100000, x=date, color = "Reported active cases (Scaled)")) +
geom_ribbon(aes(ymin = cum_risk_factor, ymax = cum_risk_factor_u, x=date, fill = 'Risk of Infection (%)'), alpha=0.3) +
geom_ribbon(aes(ymin = hosp_risk_lower, ymax = hosp_risk_upper, x=date, fill = "Risk of Hospitalization (%)"), alpha = 0.3)+
geom_ribbon(aes(ymin = death_risk_lower, ymax = death_risk_upper, x=date, fill = 'Risk of Death (%)'), alpha = 0.5)+
scale_color_manual(values = c("Reported active cases (Scaled)" = "black")) +
scale_fill_manual(values =  c('Risk of Death (%)'="#4DBBD5FF",'Risk of Hospitalization (%)'="#00A087FF",'Risk of Infection (%)'="#3C5488FF"))+
guides(color = guide_legend(reverse = TRUE, override.aes = list(linetype = 1, shape = NA), order = 1),
fill = guide_legend(reverse = TRUE, order = 2)) +
labs(y="Risk", x = "Date", colour = "", fill = "") +
ggtitle(title_name) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=font_size, face = "bold"),
legend.text = element_text(size=font_size),
axis.text = element_text(size=font_size),
axis.title = element_text(size=font_size),
legend.position = "bottom",
plot.title = element_text(size=font_size+2, face="bold")) +
scale_fill_npg() +
scale_y_continuous(trans = "log10", limits = c(min_y, max_y), labels = custom_comma)
#theme(legend.key.size = unit(1.5, 'cm'),legend.title = element_text(size=24), legend.text = element_text(size=24))
return(p)
}
sve_fun<-function(p1_A,name,label_p){
tmp<-ggarrange(p1_A,  legend='bottom',labels=label_p)
ggsave(paste0(name,'.pdf'), tmp, width = 15, height = 6, units = "in")
}
font_size=15
franklin_usa_no_mask_no_vaccine_30<- data_preprocessing_no_col('https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_usa_no_mask_no_vaccine_30.csv')
franklin_us_no_mask_no_vaccine_60<- data_preprocessing_no_col('https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_us_no_mask_no_vaccine_60.csv')
#make the date as the same
max_y<-max(franklin_usa_no_mask_no_vaccine_30$fac_aggregate_cases,franklin_us_no_mask_no_vaccine_60$fac_aggregate_cases)*1.05
min_y<-min(franklin_usa_no_mask_no_vaccine_30$death_risk_lower,franklin_us_no_mask_no_vaccine_60$death_risk_lower)*0.95
p1_A<-plot_fun(franklin_usa_no_mask_no_vaccine_30,"Franklin, MA, USA (30 Year Old)",font_size,min_y,max_y)
p1_B<-plot_fun(franklin_us_no_mask_no_vaccine_60,"Franklin, MA, USA (60 Year Old)",font_size,min_y,max_y)
################P2
franklin_usa_30_no_vaccine_surgical_mask_fixed<- data_preprocessing('https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_usa_30_no_vaccine_surgical_mask_fixed.csv')
franklin_usa_30_no_vaccine_n95_fixed<- data_preprocessing('https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_usa_30_no_vaccine_n95_fixed.csv')
max_y<-max(franklin_usa_30_no_vaccine_surgical_mask_fixed$fac_aggregate_cases,franklin_usa_30_no_vaccine_n95_fixed$fac_aggregate_cases)*1.05
min_y<-min(franklin_usa_30_no_vaccine_surgical_mask_fixed$death_risk_lower,franklin_usa_30_no_vaccine_n95_fixed$death_risk_lower)*0.95
p2_A<-plot_fun(franklin_usa_30_no_vaccine_surgical_mask_fixed,"Franklin, MA, USA (Surgical Mask)",font_size,min_y,max_y)
p2_B<-plot_fun(franklin_usa_30_no_vaccine_n95_fixed,"Franklin, MA, USA (N95 Respirator)",font_size,min_y,max_y)
p2<-ggarrange(p1_A, p1_B, p2_A, p2_B, ncol = 2, nrow=2, common.legend=T,legend='bottom',labels="AUTO")
p2
ggsave("p2.pdf", p2, width = 20, height = 10, units = "in")
franklin_us_no_mask_p1_30<-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_us_no_mask_p1_30.csv' %>%
data_preprocessing_no_col()
franklin_us_no_mask_p2_30 <-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_us_no_mask_p2_30.csv'%>%
data_preprocessing_no_col()
franklin_us_no_mask_p3_30 <-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/franklin_us_no_mask_p3_30.csv' %>%
data_preprocessing_no_col()
max_y<-max(franklin_us_no_mask_p1_30$fac_aggregate_cases,
franklin_us_no_mask_p2_30$fac_aggregate_cases,
franklin_us_no_mask_p3_30$fac_aggregate_cases)*1.05
min_y<-min(franklin_us_no_mask_p1_30$death_risk_lower,
franklin_us_no_mask_p2_30$death_risk_lower,
franklin_us_no_mask_p3_30$death_risk_lower)*0.95
p3_A<-plot_fun(franklin_us_no_mask_p1_30,"Franklin, MA, USA (PF Dose 1)",font_size,min_y,max_y)#+theme(plot.title = element_text(size = 13))
p3_B<-plot_fun(franklin_us_no_mask_p2_30,"Franklin, MA, USA (PF Dose 2)",font_size,min_y,max_y)# +theme(plot.title = element_text(size = 13))
p3_c<-plot_fun(franklin_us_no_mask_p3_30,"Franklin, MA, USA (PF Dose 2) + Booster",font_size,min_y,max_y)# +theme(plot.title = element_text(size = 13))
p3<-ggarrange(p3_A, p3_B,p3_c, ncol = 3, common.legend=T,legend='bottom',labels="E","F","G")
p3
p3<-ggarrange(p3_A, p3_B,p3_c, ncol = 3, common.legend=T,legend='bottom',labels=c("E","F","G"))
p3
ggsave("p3.pdf", p3, width = 20, height = 6, units = "in")
###p7
delhi_india_no_mask_no_vaccine_30<-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_no_mask_no_vaccine_30.csv' %>% data_preprocessing_no_col()
delhi_india_no_mask_no_vaccine_60 <-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_no_mask_no_vaccine_60.csv' %>% data_preprocessing_no_col()
max_y<-max(delhi_india_no_mask_no_vaccine_30$fac_aggregate_cases,
delhi_india_no_mask_no_vaccine_60$fac_aggregate_cases
)*1.05
min_y<-min(delhi_india_no_mask_no_vaccine_30$death_risk_lower,
delhi_india_no_mask_no_vaccine_60$death_risk_lower,
delhi_india_no_mask_no_vaccine_30$hosp_risk_lower,
delhi_india_no_mask_no_vaccine_60$hosp_risk_lower,
delhi_india_no_mask_no_vaccine_30$death_risk_upper,
delhi_india_no_mask_no_vaccine_60$death_risk_upper,
delhi_india_no_mask_no_vaccine_30$hosp_risk_upper,
delhi_india_no_mask_no_vaccine_60$hosp_risk_upper
)*0.95
p7_A<-plot_fun(delhi_india_no_mask_no_vaccine_30,"Delhi, India (30 Year old)",font_size,min_y,max_y)
p7_B<-plot_fun(delhi_india_no_mask_no_vaccine_60,"Delhi, India (60 Year old)",font_size,min_y,max_y)
delhi_india_surgical_no_vaccine_30<- 'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_surgical_no_vaccine_30.csv' %>% data_preprocessing_no_col()
delhi_india_n95_no_vaccine_30<-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_n95_no_vaccine_30.csv' %>% data_preprocessing_no_col()
max_y<-max(delhi_india_surgical_no_vaccine_30$fac_aggregate_cases,
delhi_india_n95_no_vaccine_30$fac_aggregate_cases
)*1.05
min_y<-min(delhi_india_surgical_no_vaccine_30$death_risk_lower,
delhi_india_n95_no_vaccine_30$death_risk_lower,
delhi_india_surgical_no_vaccine_30$death_risk_upper,
delhi_india_n95_no_vaccine_30$death_risk_upper,
delhi_india_surgical_no_vaccine_30$hosp_risk_lower,
delhi_india_n95_no_vaccine_30$hosp_risk_lower,
delhi_india_surgical_no_vaccine_30$hosp_risk_upper,
delhi_india_n95_no_vaccine_30$hosp_risk_upper
)*0.95
p8_A<-plot_fun(delhi_india_surgical_no_vaccine_30,"Delhi, India (Surgical Mask)",font_size,min_y,max_y)
p8_B<-plot_fun(delhi_india_n95_no_vaccine_30,"Delhi, India (N95 Respirator)",font_size,min_y,max_y)
p8<-ggarrange(p7_A, p7_B, p8_A, p8_B, ncol = 2, nrow=2, common.legend=T,legend='bottom',labels="AUTO")
p8
ggsave("p8.pdf", p8, width = 20, height = 10, units = "in")
delhi_india_no_mask_az1_30<-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_no_mask_az1_30.csv'%>% data_preprocessing_no_col()
delhi_india_no_mask_az2_30 <-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_no_mask_az2_30.csv'%>% data_preprocessing_no_col()
delhi_india_no_mask_az3_30 <-'https://raw.githubusercontent.com/Global-Health-Research-Collective/covARC/main/updated_final_csv/delhi_india_no_mask_az3_30.csv'%>% data_preprocessing_no_col()
max_y<-max(delhi_india_no_mask_az1_30$fac_aggregate_cases,
delhi_india_no_mask_az2_30$fac_aggregate_cases,
delhi_india_no_mask_az3_30$fac_aggregate_cases
)*1.05
min_y<-min(delhi_india_no_mask_az1_30$death_risk_lower,
delhi_india_no_mask_az2_30$death_risk_lower,
delhi_india_no_mask_az3_30$death_risk_lower,
delhi_india_no_mask_az1_30$hosp_risk_lower,
delhi_india_no_mask_az2_30$hosp_risk_lower,
delhi_india_no_mask_az3_30$hosp_risk_lower,
delhi_india_no_mask_az1_30$death_risk_upper,
delhi_india_no_mask_az2_30$death_risk_upper,
delhi_india_no_mask_az3_30$death_risk_upper,
delhi_india_no_mask_az1_30$hosp_risk_upper,
delhi_india_no_mask_az2_30$hosp_risk_upper,
delhi_india_no_mask_az3_30$hosp_risk_upper
)*0.95
p9_A<-plot_fun(delhi_india_no_mask_az1_30,"Delhi, India (AZ Dose 1)",font_size,min_y,max_y) #+theme(plot.title = element_text(size = 13))
p9_B<-plot_fun(delhi_india_no_mask_az2_30,"Delhi, India (AZ Dose 2)",font_size,min_y,max_y) #+theme(plot.title = element_text(size = 13))
p9_c<-plot_fun(delhi_india_no_mask_az3_30,"Delhi, India (AZ Dose 2 + Booster)",font_size,min_y,max_y) #+theme(plot.title = element_text(size = 13))
p9<-ggarrange(p9_A, p9_B,p9_c,ncol = 3, common.legend=T,legend='bottom',labels=c("E","F","G"))
p9
ggsave("p9.pdf", p9, width = 20, height = 6, units = "in")
